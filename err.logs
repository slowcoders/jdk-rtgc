# 2023.04.27 LAZY REF COUNT

javac/cast/intersection/IntersectionTypeCastTest
#  Internal Error (../../src/hotspot/share/gc/rtgc/rtRefProcessor.cpp:708), pid=27938, tid=19203
#  assert(!referent->hasShortcut()) failed: precond
V  [libjvm.dylib+0xb6632c]  VMError::report_and_die(int, char const*, char const*, __va_list_tag*, Thread*, unsigned char*, void*, void*, char const*, int, unsigned long)+0x6dc
V  [libjvm.dylib+0xb66958]  VMError::report_and_die(Thread*, void*, char const*, int, char const*, char const*, __va_list_tag*)+0x38
V  [libjvm.dylib+0x2cbb2d]  report_vm_error(char const*, int, char const*, char const*, ...)+0xdd
V  [libjvm.dylib+0x8e33c4]  void __keep_alive_final_referents<narrowOop, false>(OopClosure*, VoidClosure*)+0x984
V  [libjvm.dylib+0x8e48df]  rtHeap::process_final_phantom_references(OopClosure*, VoidClosure*, bool)+0x5f
V  [libjvm.dylib+0x2d5a5b]  DefNewGeneration::collect(bool, bool, unsigned long, bool)+0x95b
V  [libjvm.dylib+0x42e82b]  GenCollectedHeap::collect_generation(Generation*, bool, unsigned long, bool, bool, bool, bool)+0x3db
V  [libjvm.dylib+0x42efad]  GenCollectedHeap::do_collection(bool, bool, unsigned long, bool, GenCollectedHeap::GenerationType)+0x54d
V  [libjvm.dylib+0x42f969]  GenCollectedHeap::satisfy_failed_allocation(unsigned long, bool)+0x159
V  [libjvm.dylib+0x42afcb]  VM_GenCollectForAllocation::doit()+0x5b
V  [libjvm.dylib+0xb6b9f2]  VM_Operation::evaluate()+0xf2
V  [libjvm.dylib+0xb87403]  VMThread::evaluate_operation(VM_Operation*)+0x123
V  [libjvm.dylib+0xb87f53]  VMThread::inner_execute(VM_Operation*)+0x213
V  [libjvm.dylib+0xb870c5]  VMThread::loop()+0xa5
V  [libjvm.dylib+0xb86ead]  VMThread::run()+0xdd
V  [libjvm.dylib+0xaeb9f7]  Thread::call_run()+0x177
V  [libjvm.dylib+0x844770]  thread_native_entry(Thread*)+0x150
C  [libsystem_pthread.dylib+0x68fc]  _pthread_start+0xe0
C  [libsystem_pthread.dylib+0x2443]  thread_start+0xf


tools/javac/defaultMethods/static/hiding/InterfaceMethodHidingTest
#  Internal Error (../../src/hotspot/share/gc/rtgc/impl/GCUtils.cpp:14), pid=27934, tid=12803
#  assert(offset != 0) failed: precond
V  [libjvm.dylib+0xb6632c]  VMError::report_and_die(int, char const*, char const*, __va_list_tag*, Thread*, unsigned char*, void*, void*, char const*, int, unsigned long)+0x6dc
V  [libjvm.dylib+0xb66958]  VMError::report_and_die(Thread*, void*, char const*, int, char const*, char const*, __va_list_tag*)+0x38
V  [libjvm.dylib+0x2cbb2d]  report_vm_error(char const*, int, char const*, char const*, ...)+0xdd
V  [libjvm.dylib+0x1fadd]  RTGC::_offset2Pointer(unsigned int)+0x2d
V  [libjvm.dylib+0x23a61]  RTGC::SafeShortcut::inContiguousTracing(RTGC::GCObject*, RTGC::SafeShortcut**)+0x41
V  [libjvm.dylib+0x3a76]  bool RTGC::GarbageProcessor::findSurvivalPath<false>(RTGC::ShortOOP&)+0x306
V  [libjvm.dylib+0x2f84]  RTGC::GarbageProcessor::scanSurvivalPath(RTGC::GCObject*, bool)+0xf4
V  [libjvm.dylib+0x50c6]  RTGC::GarbageProcessor::detectGarbage(RTGC::GCObject*)+0xf6
V  [libjvm.dylib+0x8e010a]  RTGC::RefIterator<true>::next_ref(RTGC::SkipPolicy)+0x2ba
V  [libjvm.dylib+0x8e0c65]  rtHeap::process_weak_soft_references(OopClosure*, VoidClosure*, bool)+0x245
V  [libjvm.dylib+0x432510]  GenMarkSweep::mark_sweep_phase1(bool)+0xe0
V  [libjvm.dylib+0x4322fd]  GenMarkSweep::invoke_at_safepoint(ReferenceProcessor*, bool)+0x20d
V  [libjvm.dylib+0xae9f1b]  TenuredGeneration::collect(bool, bool, unsigned long, bool)+0xbb
V  [libjvm.dylib+0x42e82b]  GenCollectedHeap::collect_generation(Generation*, bool, unsigned long, bool, bool, bool, bool)+0x3db
V  [libjvm.dylib+0x42f360]  GenCollectedHeap::do_collection(bool, bool, unsigned long, bool, GenCollectedHeap::GenerationType)+0x900
V  [libjvm.dylib+0x42f969]  GenCollectedHeap::satisfy_failed_allocation(unsigned long, bool)+0x159
V  [libjvm.dylib+0x42afcb]  VM_GenCollectForAllocation::doit()+0x5b
V  [libjvm.dylib+0xb6b9f2]  VM_Operation::evaluate()+0xf2
V  [libjvm.dylib+0xb87403]  VMThread::evaluate_operation(VM_Operation*)+0x123
V  [libjvm.dylib+0xb87f53]  VMThread::inner_execute(VM_Operation*)+0x213
V  [libjvm.dylib+0xb870c5]  VMThread::loop()+0xa5
V  [libjvm.dylib+0xb86ead]  VMThread::run()+0xdd
V  [libjvm.dylib+0xaeb9f7]  Thread::call_run()+0x177
V  [libjvm.dylib+0x844770]  thread_native_entry(Thread*)+0x150
C  [libsystem_pthread.dylib+0x68fc]  _pthread_start+0xe0
C  [libsystem_pthread.dylib+0x2443]  thread_start+0xf


runtime/modules/ClassLoaderNoUnnamedModuleTest
#  Internal Error (../../src/hotspot/share/classfile/moduleEntry.cpp:275), pid=15484, tid=6659
#  guarantee(java_lang_Module::is_instance(module)) failed: The unnamed module for ClassLoader ClassLoaderNoUnnamedModule$TestClass, is null or not an instance of java.lang.Module. The class loader has not been initialized correctly.
V  [libjvm.dylib+0xb6632c]  VMError::report_and_die(int, char const*, char const*, __va_list_tag*, Thread*, unsigned char*, void*, void*, char const*, int, unsigned long)+0x6dc
V  [libjvm.dylib+0xb66958]  VMError::report_and_die(Thread*, void*, char const*, int, char const*, char const*, __va_list_tag*)+0x38
V  [libjvm.dylib+0x2cbb2d]  report_vm_error(char const*, int, char const*, char const*, ...)+0xdd
V  [libjvm.dylib+0x7d3f43]  ModuleEntry::create_unnamed_module(ClassLoaderData*)+0x193
V  [libjvm.dylib+0x25776d]  ClassLoaderData::ClassLoaderData(Handle, bool)+0x29d
V  [libjvm.dylib+0x25f8d2]  ClassLoaderDataGraph::add_to_graph(Handle, bool)+0xc2
V  [libjvm.dylib+0x25facf]  ClassLoaderDataGraph::add(Handle, bool)+0x5f
V  [libjvm.dylib+0xa908a4]  ClassLoaderDataGraph::find_or_create(Handle)+0xf4
V  [libjvm.dylib+0xa918d1]  SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, JavaThread*)+0x261
V  [libjvm.dylib+0xa90f54]  SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, JavaThread*)+0x64
V  [libjvm.dylib+0x5e5ce1]  find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, JavaThread*)+0x31
V  [libjvm.dylib+0x5e5bf6]  JVM_FindClassFromCaller+0x496
C  [libjava.dylib+0x217b]  Java_java_lang_Class_forName0+0x12b
j  java.lang.Class.forName0(Ljava/lang/String;ZLjava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Class;+0 java.base@17-internal
j  java.lang.Class.forName(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;+43 java.base@17-internal
j  ClassLoaderNoUnnamedModule.testConstructorCall()V+62
j  ClassLoaderNoUnnamedModule.main([Ljava/lang/String;)V+0

gc/g1/humongousObjects/TestHumongousClassLoader
runtime/LoadClass/LongBCP
#  Internal Error (../../src/hotspot/share/classfile/javaClasses.inline.hpp:121), pid=18201, tid=18691
#  assert(is_instance(java_string)) failed: must be java_string
V  [libjvm.dylib+0xb6632c]  VMError::report_and_die(int, char const*, char const*, __va_list_tag*, Thread*, unsigned char*, void*, void*, char const*, int, unsigned long)+0x6dc
V  [libjvm.dylib+0xb66958]  VMError::report_and_die(Thread*, void*, char const*, int, char const*, char const*, __va_list_tag*)+0x38
V  [libjvm.dylib+0x2cbb2d]  report_vm_error(char const*, int, char const*, char const*, ...)+0xdd
V  [libjvm.dylib+0x4a010e]  java_lang_String::length(oop)+0x9e
V  [libjvm.dylib+0xa40dd5]  VerifyStrings::operator()(WeakHandle*)+0x75
V  [libjvm.dylib+0xa40c1c]  void ConcurrentHashTable<StringTableConfig, (MEMFLAGS)10>::do_scan_locked<VerifyStrings>(Thread*, VerifyStrings&)+0x11c
V  [libjvm.dylib+0xa3ceb8]  bool ConcurrentHashTable<StringTableConfig, (MEMFLAGS)10>::try_scan<VerifyStrings>(Thread*, VerifyStrings&)+0x58
V  [libjvm.dylib+0xa3ce3b]  StringTable::verify()+0x5b
V  [libjvm.dylib+0xb1b721]  Universe::verify(VerifyOption, char const*)+0x2b1
V  [libjvm.dylib+0xb6cb01]  VM_Exit::doit()+0x51
V  [libjvm.dylib+0xb6b9f2]  VM_Operation::evaluate()+0xf2
V  [libjvm.dylib+0xb87403]  VMThread::evaluate_operation(VM_Operation*)+0x123
V  [libjvm.dylib+0xb87f53]  VMThread::inner_execute(VM_Operation*)+0x213
V  [libjvm.dylib+0xb870c5]  VMThread::loop()+0xa5
V  [libjvm.dylib+0xb86ead]  VMThread::run()+0xdd
V  [libjvm.dylib+0xaeb9f7]  Thread::call_run()+0x177
V  [libjvm.dylib+0x844770]  thread_native_entry(Thread*)+0x150
C  [libsystem_pthread.dylib+0x68fc]  _pthread_start+0xe0
C  [libsystem_pthread.dylib+0x2443]  thread_start+0xf

gc/arguments/TestShrinkHeapInSteps
#  Internal Error (../../src/hotspot/share/classfile/javaClasses.cpp:766), pid=17728, tid=5891
#  assert(java_string->klass() == vmClasses::String_klass()) failed: must be java_string
V  [libjvm.dylib+0xb6632c]  VMError::report_and_die(int, char const*, char const*, __va_list_tag*, Thread*, unsigned char*, void*, void*, char const*, int, unsigned long)+0x6dc
V  [libjvm.dylib+0xb66958]  VMError::report_and_die(Thread*, void*, char const*, int, char const*, char const*, __va_list_tag*)+0x38
V  [libjvm.dylib+0x2cbb2d]  report_vm_error(char const*, int, char const*, char const*, ...)+0xdd
V  [libjvm.dylib+0x4d22e8]  java_lang_String::equals(oop, unsigned short const*, int)+0xd8
V  [libjvm.dylib+0xa3e2ae]  StringTableLookupJchar::equals(WeakHandle*, bool*)+0x8e
V  [libjvm.dylib+0xa3a7e3]  bool ConcurrentHashTable<StringTableConfig, (MEMFLAGS)10>::get<StringTableLookupJchar, StringTableGet>(Thread*, StringTableLookupJchar&, StringTableGet&, bool*)+0x113
V  [libjvm.dylib+0xa3a679]  StringTable::do_lookup(unsigned short const*, int, unsigned long)+0xa9
V  [libjvm.dylib+0xa3abdb]  StringTable::intern(Handle, unsigned short const*, int, JavaThread*)+0x1db
V  [libjvm.dylib+0xa3ae15]  StringTable::intern(oop, JavaThread*)+0x1a5
V  [libjvm.dylib+0x6055fb]  JVM_InternString+0xdb